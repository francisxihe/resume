import{_ as e,c as a,o as t,U as o}from"./chunks/framework.qvcCyPxx.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/index.md","filePath":"interview/index.md"}'),r={name:"interview/index.md"},n=o('<h4 id="_3-1-1-monorepo" tabindex="-1">3.1.1 Monorepo <a class="header-anchor" href="#_3-1-1-monorepo" aria-label="Permalink to &quot;3.1.1 Monorepo&quot;">​</a></h4><p>在去年基建项目的管理中的基础上运用到了业务当中，解决了北京信用不同应用之间功能需要频繁迁移的问题</p><h4 id="_3-1-2-微前端" tabindex="-1">3.1.2 微前端 <a class="header-anchor" href="#_3-1-2-微前端" aria-label="Permalink to &quot;3.1.2 微前端&quot;">​</a></h4><p>解决了北京信用存在vue2.7+TS和vue2.6+JS两个版本的应用和公安低代码平台需要集合多个前端项目的问题</p><h4 id="_3-1-3-前端脚手架升级" tabindex="-1">3.1.3 前端脚手架升级 <a class="header-anchor" href="#_3-1-3-前端脚手架升级" aria-label="Permalink to &quot;3.1.3 前端脚手架升级&quot;">​</a></h4><p>原先的脚手架只包含了最基础的代码，不包括基础业务功能（如人员管理、权限管理），导致每个应用都需要开发一套自己的系统管理，业务、技术方案都不统一，造成了极大的资源浪费，同时后期维护起来也非常麻烦。</p><p>V2版本的脚手架会直接内置这些功能，解决这一问题。</p><h4 id="_2-2-建立组件模版库、图表模版库" tabindex="-1">2.2 建立组件模版库、图表模版库 <a class="header-anchor" href="#_2-2-建立组件模版库、图表模版库" aria-label="Permalink to &quot;2.2 建立组件模版库、图表模版库&quot;">​</a></h4><p>针对对业务组件通用型难以判断，功能难以提炼的情况，建立一套模版库，用来收集具有代表性的业务组件、功能模块，为业务组件库做好准备。</p>',9),i=[n];function _(d,s,c,h,l,p){return t(),a("div",null,i)}const f=e(r,[["render",_]]);export{u as __pageData,f as default};
