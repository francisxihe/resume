import{_ as l,c as o,o as i,U as t}from"./chunks/framework.qvcCyPxx.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"resume/manage.md","filePath":"resume/manage.md"}'),r={name:"resume/manage.md"},a=t('<p><strong>徐文华</strong></p><p>男｜ 1992.06</p><p>职位：前端工程师</p><p>电话：15558166838</p><p>邮箱：1272274352@qq.com</p><h3 id="工作经历" tabindex="-1">工作经历 <a class="header-anchor" href="#工作经历" aria-label="Permalink to &quot;工作经历&quot;">​</a></h3><p><strong>浙江非线数联科技股份有限公司 2022.4-2023.10</strong></p><p><strong>前端主管</strong></p><ul><li>负责前端团队 15 人的日常管理工作，协调沟通各项资源，优化前端架构，规划前端技术方向；</li><li>制定并且落地开发规范、流程规范等日常规范。</li></ul><p><strong>基建负责人</strong></p><ul><li>根据公司现有业务结构和前端技术能力，搭建前端基建体系，做到新项目搭建、组件引入全部配置化，提升前端的开发效率的同时减少组件使用的心智负担；</li><li>通过低代码平台实现了零开发或者轻度开发页面比例达到 50%。</li></ul><p><strong>杭州魔筷科技有限公司 2019.6-2022.3</strong></p><p><strong>前端中后台组长</strong></p><ul><li>协助前端主管制定日常规范，包括开发规范、流程规范等，推动规范的落地，成功帮助中后台季度故障数从 15+降到了 5 个以内；</li><li>前端微服务的推进者，完成了 boss 后台从 vue2 到 vue3 的渐进式升级。</li></ul><p><strong>基建和业务的核心开发者</strong></p><ul><li>独立负责 markupForm 的设计、开发工作，cover 前端 95%+的表单业务场景，提升中后台人效 75%；</li><li>搭建供应商用户入驻系统、供应商商品信息管理 H5 商品交易负责人，核心开发。</li></ul><p><strong>观相科技(上海)有限公司 2017.6-2019.3</strong> 前端开发</p><p>负责 WWF 微信管理系统、DataXBoard，主导公司业务组件的设计、开发。</p><p><strong>南京美驰科技开发有限公司 2015.3-2017.5</strong> 全栈开发</p><p>负责伊利积分商场的开发、维护和管理。</p><h3 id="项目经历" tabindex="-1">项目经历 <a class="header-anchor" href="#项目经历" aria-label="Permalink to &quot;项目经历&quot;">​</a></h3><h5 id="公安低代码平台-2022-4-2023-10" tabindex="-1">公安低代码平台 <strong>2022.4-2023.10</strong> <a class="header-anchor" href="#公安低代码平台-2022-4-2023-10" aria-label="Permalink to &quot;公安低代码平台 **2022.4-2023.10**&quot;">​</a></h5><p>项目负责人、核心开发，技术栈：Vue</p><p>**背景：**通过低代码平台开发治安管理、案审法制文书寄递等一系列业务应用，与公安内网系统相辅相成，真正解决民警在工作中的难题，大幅节省警力。同时运用流程在线、PC 端移动端同步等特点，结合从市公安局机关到各公安分/县局再到各分/县局群众力量组织的三层关联组织架构，贯穿线性组织，形成矩阵型架构，实现高效协作。</p><p><strong>成果：</strong></p><ol><li>自研前端模型驱动引擎，实现业务、数据、流程的灵活建模以及高效运行时的业务支撑；</li><li>支持包括 Web、H5 的应用搭建以及无缝切换；</li><li>定义多层次多维度的物料模型，支持开发人员代码自定义和灵活的物料重组、复用。</li></ol><p><strong>沉淀：</strong></p><ol><li>将模型驱动引擎剥离，前端开发可以直接编写 markup 语法使用，提升表单的开发效率；</li><li>将前端组件库和低代码平台物料库打通形成一套物料体系，前端组件库通过方法注册可以直接被低代码平台引用，低代码平台的开发过程中可以将物料先在组件库中实现，同时一些模型配置也纳入了这套物料体系当中，使前端物料形成了一个完整的生态。</li></ol><p><strong>复盘：</strong></p><ol><li>低代码产品现在已经较为普及，用户对产品形态已经有了相当的认识，因此产品的设计应当在市面上先有产品的基础之上进行加工，不能搞闭门造车；</li><li>简单往往最为复杂，如果没有强大的基础作为支撑，这样的简单很容易走更多的弯路。</li></ol><h5 id="前端应用搭建平台-2022-10-2023-10" tabindex="-1">前端应用搭建平台 <strong>2022.10-2023.10</strong> <a class="header-anchor" href="#前端应用搭建平台-2022-10-2023-10" aria-label="Permalink to &quot;前端应用搭建平台 **2022.10-2023.10**&quot;">​</a></h5><p>项目负责人、核心开发，技术栈：Vue</p><p>**背景：**公司主要收入来源为政府外包项目，开发过程中彼此独立，一半的同学常年散落在各个开发现场，很难集中化的管理，导致各个前端项目的组件难以复用，需要有一套系统帮助大家快速搭建平台和页面的同时不增加额外的心智负担。</p><p><strong>挑战：</strong></p><ul><li>脚手架</li></ul><ol><li>直接以模版的形式存在 gitlab 上缺乏定制化的能力，做的大而全新项目冗余内容过多，小巧又和 vue 官方的脚手架没什么区别，如果满足较多的场景那么项目过多维护起来也非常麻烦；</li><li>使用 umi 这种开箱即用的应用框架往往配置就是额外的学习成本，同时要完成这样优秀的封装需要一个团队的努力，很显然一个人无法完成这样的工作;</li></ol><ul><li>组件库</li></ul><ol><li>前端水平层次不齐，封装的组件稳定性难以保证，同时也无法要求每个人的每个组件都写测试用例；如果专职维护投入的人力太大，而且不同项目业务可能完全不一样，封装的组件可能不够接地气；</li><li>复杂组件往往需要大量的 demo 和文档支撑，传统的文档形式很难保证内容足够详细且能实时更新，即使文档内容足够详细，对使用者心智负担也是非常大；</li><li>大部分同学缺乏对组件的有效管理，收集手上可以或者有复用潜力的组件的时候往往不记得了，但是 codeReview 的时候发现并非如此。</li></ol><p><strong>解决方案：</strong></p><ol><li>组件代码、demo 代码全部存放在数据库中，页面通过沙盒展示，保证 demo、文档和代码同步；</li><li>对用户增加权限管理和代码发布等功能，公共组件需要测试用例和审核，私有组件则不需要，一方面方便大家管理自己的组件，一方面公共组件的质量能得到保证；</li><li>搭建项目过程中脚手架通过 cli 收集完用户配置之后，用 ast 给基础脚手架注入代码，实现模版的定制化功能；</li><li>可以直接通过 cli 调用接口的方式获取组件库中的代码，直接往页面中添加组件，减少 cv 操作。</li></ol><p><strong>成果：</strong></p><ol><li>收录了一百多个公共组件，包括基础组件、业务组件、页面模版等不同维度的组件；</li><li>完全通过 cli 自动化引入，完全规避了 CV 过程中可能导致的问题；</li><li>实现这些功能的过程中，把前端自动化发包、自动化发布等一并完成，切实提升大家的开发效率。</li></ol><h5 id="供应商系统-2020-4-2022-1" tabindex="-1">供应商系统  2020.4-2022.1 <a class="header-anchor" href="#供应商系统-2020-4-2022-1" aria-label="Permalink to &quot;供应商系统  2020.4-2022.1&quot;">​</a></h5><p>项目负责人、核心开发，技术栈：Vue</p><p><strong>背景：</strong></p><ol><li>随着业务高速发展和监管部门的要求，需要审核记录更多商家资质、商品相关的信息，以方便运营持续跟进；</li><li>表单审核流程需要通用化形成审核中心，后续逐步接入其他业务的表单审核。</li></ol><p><strong>挑战：</strong></p><ol><li>入驻表单需要多维度的标记审核结果和拒绝原因；</li><li>表单在审核阶段流转以 JSON 对象形式保存用户信息，导致字段发生调整时服务端无法通过执行 SQL 的方式同步更改历史数据，需要前端做数据兼容；</li></ol><p>**解决方案：**前端增加中间层用来处理数据，判断当前表单的审核状态，初始化（分离）业务数据、审核结果和拒绝原因；确定表单数据版本，做数据向下兼容处理或者进入兼容页面；</p><p><strong>成果：</strong></p><ol><li>稳定服务 1W+供应商入驻，提升运营人员 70%的人效；</li><li>快速稳定支持 20 多次版本变动；</li><li>凭借此项目完成了个人晋升</li></ol><p><strong>沉淀:</strong></p><p>供应商入驻和商品编辑页面是前端中后台的核心页面，数据和交互都很复杂，在项目跟进过程中，不断地梳理表单用到的组件和以及交互形式，同时收集其他业务场景遇到的复杂的问题，完成了 schemeForm 的设计，并在后续工作中成功落地，为前端的低代码和代码分级开发做好准备。</p><h5 id="h5-商品交易系统-2019-10-2020-10" tabindex="-1">H5 商品交易系统 2019.10-2020.10 <a class="header-anchor" href="#h5-商品交易系统-2019-10-2020-10" aria-label="Permalink to &quot;H5 商品交易系统 2019.10-2020.10&quot;">​</a></h5><p>独立开发，技术栈：Vue</p><p>**背景：**作为快手的电商服务伙伴，公司需要一套稳定 H5 的商品交易系统接入快手 APP 引流，达成商品交易。</p><p><strong>挑战：</strong></p><ol><li>商品落地页需要承载快手直播间的巨大的访问量，直播间内百万人是常态，且快手主攻下沉市场，移动端设备更是五花八门，无论对 H5 页面的性能还是兼容性都有极高的要求；</li><li>魔筷当时的 H5 交易系统陈旧，无法满足业务要求，且前端基建当时处于开始阶段非常掣肘改造工作</li></ol><p><strong>解决方案：</strong></p><ol><li>优化静态资源、页面结构，确保首屏内容最先渲染完成；</li><li>开发监控页面性能指标，根据实时监控数据优化落地页结构。</li></ol><p><strong>成果：</strong></p><ol><li>商品落地页秒开率&gt;90%、加载成功率&gt;99%</li><li>推进完成移动端组件库、方法库等基建项目</li></ol><h3 id="教育背景" tabindex="-1">教育背景 <a class="header-anchor" href="#教育背景" aria-label="Permalink to &quot;教育背景&quot;">​</a></h3><p>南京航空航天大学金城学院  2011.9-2015.6   软件工程专业</p>',64),e=[a];function n(s,p,g,h,u,c){return i(),o("div",null,e)}const _=l(r,[["render",n]]);export{m as __pageData,_ as default};
